# Project: Basic Algorithms

## Problem1: Finding the Square Root of an Integer
  The algorithm ultilizes and performs binary search in the range of 1 to the given number,
finds the middle value then check whether `middle ** 2` is less than or equal to `number` in 
each iteration. If it is, update the return value then continue searching in the right half, 
the final result is the floored squared root of the given number.
  The binary search results in O(logn) time complexity. Space complexity is O(1) since the 
algorithm only stores some integers in `start`, `end`, `result` and does not depends on the 
size of the given number.

## Problem2: Search in a Rotated Sorted Array


## Problem3: Rearrange Array Digits


## Problem4: Dutch National Flag Problem


## Problem5: Autocomplete with Tries


## Problem6: Unsorted Integer Array


## Problem7: Request Routing in a Web Server with a Trie

